#!/usr/bin/env bash

source ~/workstation/bin/common.sh

function select-option(){
  PS3=$'\e[0;32mSelect: \e[0m'
  opts=($@)

  select opt in "${opts[@]}" "Quit" ; do
    if (( REPLY == 1 + ${#opts[@]} )) ; then
      exit

    elif (( REPLY > 0 && REPLY <= ${#opts[@]} )) ; then
      echo $opt
      break

    else
      error "Invalid option. Try another one."
    fi
  done
}

function trigger-pipeline(){
  payload=$(fly -t $ENV pipelines --json)
  pipeline=$1
  jobs=()

  if [[ -z $pipeline ]]; then
    pipelines=$(echo "$payload" | jq ".[] |.name" -r | sort)
    pipeline=$(select-option $pipelines)
  fi

  groups=$(echo "$payload" | jq ".[] | select(.name==\"$pipeline\") | .groups" -r)

  if [ "$groups" == "null" ]; then
    payload=$(fly -t $ENV jobs -p "$pipeline" --json)
    jobs=$(echo "$payload" | jq ".[] | .name" -r)
  else
    group_names=$(echo $groups | jq -r ".[] | .name")
    group=$(select-option $group_names)
    jobs=$(echo "$groups" | jq ".[] | select(.name==\"$group\")  | .jobs[]" -r)
  fi

  job=$(select-option $jobs)

  fly -t $ENV tj -j $pipeline/$job -w
}


trigger-pipeline "${@:-}"
