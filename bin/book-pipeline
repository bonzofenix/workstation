#!/bin/bash

set -e

PIPELINE_DIR=$HOME/workspace/configs/pipelines
TMP_DIR=$HOME/.book

function temp_travel_agent() {
  local pipeline=$1
  local agent_file=$PIPELINE_DIR/$pipeline/travel-agent.yml

  mkdir -p $TMP_DIR

  local git_url=$( bosh int $agent_file --path /git_project )
  local git_project=$( echo $git_url | xargs -I {} basename {} .git )
  local local_git_project_folder="$HOME/workspace/$git_project"

  if [ ! -d $local_git_project_folder ]; then
    git clone $git_url $local_git_project_folder
  fi


  spruce merge \
    $agent_file \
    <(echo "git_project: $local_git_project_folder") \
    > $TMP_DIR/$pipeline.yml

  echo $TMP_DIR/$pipeline.yml
}

function book_pipeline(){
  local pipeline_name=$1
  local agent_file=$( temp_travel_agent $pipeline_name )
  local git_project=$( bosh int $agent_file --path /git_project | xargs -I {} basename {} .git )
  local settings_file=$PIPELINE_DIR/$pipeline_name/settings.yml
  local default_settings_file=$PIPELINE_DIR/$git_project.settings.yml
  local book_args=""

  if [ -f "$default_settings_file" ]; then
    book_args="$book_args $default_settings_file"
  fi

  if [ -f "$settings_file" ]; then
    book_args="$book_args $settings_file"
  fi

  travel-agent book $agent_file $book_args

}

prompt="Available Travel Agent pipeline:"
options=( $(tree -d -L 1 -i --noreport $PIPELINE_DIR | sed 1d) )

if [[ -z "$1" ]]; then
  PS3="$prompt "

  select pipeline_name in "${options[@]}" "Quit" ; do
    if (( REPLY == 1 + ${#options[@]} )) ; then
      exit

    elif (( REPLY > 0 && REPLY <= ${#options[@]} )) ; then

      echo "Booking $pipeline_name pipeline"
      book_pipeline $pipeline_name
      break

    else
      echo "Invalid option. Try another one."
    fi
  done
else
  book_pipeline $1
fi
